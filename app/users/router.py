from aiogram import Router, types, F
from aiogram.filters import CommandStart, Command
from aiogram.fsm.context import FSMContext

from app.commands import BOT_COMMANDS_STR
from app.users.dependencies import UserServiceDep
from app.users.keyboards import MAIN_MENU_KB
from app.users.schemas import UserCreate

router = Router()


@router.message(CommandStart())
async def start_command(
    message: types.Message, state: FSMContext, users: UserServiceDep
) -> None:
    assert message.from_user
    user = await users.get_by_telegram_id(message.from_user.id)
    if not user:
        data = UserCreate(
            telegram_id=message.from_user.id,
            first_name=message.from_user.first_name,
            last_name=message.from_user.last_name,
        )
        user = await users.register(state, data)
    await message.answer(
        f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {user.display_name}! üòä",
        reply_markup=MAIN_MENU_KB,
    )


@router.message(Command("help"))
@router.message(F.text == "–ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ –±–æ—Ç—É üß≠")
async def get_help(message: types.Message) -> None:
    await message.answer("**–ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ –±–æ—Ç—É**:\n\n" + BOT_COMMANDS_STR)


@router.message(Command("about"))
async def about(message: types.Message) -> None:
    text = (
        "**Testopia** - –º–æ—â–Ω—ã–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è –≤–µ–¥–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–æ–≤.\n\n"
        "–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞–º–∏, –∑–∞–¥–∞—á–∞–º–∏ –∏ —Ç–µ—Å—Ç–∞–º–∏.\n\n"
        "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /help –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥."
    )
    await message.answer(text)
